<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">

	<!-- 전체조회 -->
	<select id="board_list" resultType="vo.BoardVo">
		select * from board order by b_idx
	</select>

	<!-- 검색된 게시물 수 얻어오기 -->
	<select id="board_condition_row_total" parameterType="Map"
		resultType="int">
		select ifnull(count(*),0) from board
		<trim prefix="where" prefixOverrides="or">

			<if test="name!=null">
				user_name like concat('%',#{ name },'%')
			</if>
			<if test="subject!=null">
				b_subject like concat('%',#{ subject },'%')
			</if>
			<if test="content!=null">
				or b_content like concat('%',#{ content },'%')
			</if>

		</trim>
	</select>

	<!-- b_idx에 해당하는 게시물 1건 얻어오기 -->
	<select id="board_one" parameterType="int" resultType="vo.BoardVo">
		select * from board where b_idx=#{ b_idx }
	</select>

	<!-- b_idx 얻어오기 -->
	<select id="board_b_idx" resultType="int">
		select ifnull(max(b_idx),0)+1 from board
	</select>

	<!-- user_idx에 해당하는 board리스트 얻어오기 -->
	<select id="board_user_idx_list" parameterType="int" resultType="vo.BoardVo">
		select * from board where user_idx=#{ user_idx }
	</select>

	<!-- 전체게시물 수 얻어오기 -->
	<select id="board_row_total" resultType="int">
		select
		ifnull(count(*),0) from board
	</select>

	<!-- 새글쓰기 -->
	<insert id="board_insert" parameterType="vo.BoardVo">
		INSERT INTO board ( b_subject, c_idx, c_name, b_content, b_photo, b_readhit, 
							b_like, b_ip, b_open, user_idx, user_id, user_name )
				VALUES ( #{ b_subject }, #{ c_idx }, #{ c_name }, #{ b_content }, #{ b_photo }, 0,
						 0, #{ b_ip }, #{ b_open }, #{ user_idx }, #{ user_id }, #{ user_name } );
	</insert>
	
	<!-- 글 삭제 -->
	<delete id="board_delete" parameterType="int"> 
		delete from board where b_idx=#{ b_idx }
	</delete>
	
	<!-- 조회수 증가 -->
	<update id="board_update_readhit" parameterType="int">
		update board set b_readhit=b_readhit+1 where b_idx=#{ b_idx }
	</update>
	
	<!-- 파일 변경 -->
	<update id="board_b_photo_update" parameterType="vo.BoardVo">
		update board set b_photo=#{ b_photo } where b_idx=#{ b_idx }
	</update>
	
	<!-- 내용변경 -->
	<update id="board_modify_update" parameterType="vo.BoardVo">
		update board set b_subject=#{ b_subject }, b_content=#{ b_content }
			where b_idx=#{ b_idx }
	</update>
	
	<!-- 좋아요 증가 -->
	<update id="board_like_update" parameterType="vo.BoardVo">
		update board set b_like=ifnull(#{ b_like },0)+1 where b_idx=#{ b_idx }
	</update>
	
	<!-- 보드페이지에서 검색된 값 반환 -->
	<select id="board_condition_list" parameterType="Map" 
				resultType="vo.BoardVo">
		select * from board
		<trim prefix="where" prefixOverrides="or">
			
			<if test="name!=null">
				user_name like concat('%',#{ name },'%')
			</if>
			<if test="subject!=null">
				b_subject like concat('%',#{ subject },'%')
			</if>
			<if test="content!=null">
				or b_content like concat('%',#{ content },'%')
			</if>
		</trim>
		order by b_idx desc
	</select>

	<!-- 같은 이름의 보드리스트 얻어오기 -->
 	<select id="board.board_list_c_name" parameterType="String" resultType="vo.BoardVo">
 		select * from board where c_name=#{ c_name } order by b_idx desc
 	</select>

</mapper>



